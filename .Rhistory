source("~/Documents/GitHub/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript.R", echo=TRUE)
source("~/Documents/GitHub/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript.R", echo=TRUE)
source("~/Documents/GitHub/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript.R", echo=TRUE)
source("~/Documents/GitHub/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript.R", echo=TRUE)
source("~/Documents/GitHub/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript.R", echo=TRUE)
install.packages("bptest")
source("~/Documents/GitHub/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript.R", echo=TRUE)
install.packages("car")
source("~/Documents/GitHub/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript.R", echo=TRUE)
install.packages("lmtest")
install.packages("zoo")
source("~/Documents/GitHub/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript.R", echo=TRUE)
source("~/Documents/GitHub/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript.R", echo=TRUE)
source("~/Documents/GitHub/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript.R", echo=TRUE)
source("~/Documents/GitHub/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript.R", echo=TRUE)
# Perform Paired T-Test: Lot 1 vs. Lot 2
bartlett.test(data)
summary(coilvar)
bartlett.test(PSI ~ Manufacturing_Lot)
bartlett.test(data(g))
bartlett.test(data)
tamhaneT2Test(data)
install.packages("PMCMRplus")
library(PMCMRplus)
tamhaneT2Test(data)
library(PMCMRplus)
tamhaneT2Test(coilar)
library(PMCMRplus)
tamhaneT2Test(coilvar)
library(PMCMRplus)
tamhaneT2Test(PSI ~ Manufacturing_Lot, data = coil_filt)
library(PMCMRplus)
tamhaneT2Test(aov(PSI ~ Manufacturing_Lot, data = coil_filt))
tamhaneT2Test(data)
tamhaneT2Test(data)
data$Manifacturing_Lot <- as.factor(data$Manifacturing_Lot)
library(PMCMRplus)
tamhaneT2Test(data$PSI, data$Manifacturing_Lot)
library(PMCMRplus)
kruskal.test(data$PSI, data$Manifacturing_Lot)
leveneTest(mydata$PSI, mydata$Manifacturing_Lot)
leveneTest(data$PSI, data$Manifacturing_Lot)
data$PSI -> as.factor(data$PSI)
coil_filt$PSI -> as.factor(coil_filt$PSI)
leveneTest(coil_filt$PSI, coil_filt$Manifacturing_Lot)
leveneTest(PSI, Manifacturing_Lot)
leveneTest(data)
leveneTest(coil_filt)
leveneTest(coilvar)
